spring:
  application:
    name: backendsdk
  # H2 Console for development
  h2:
    console:
      enabled: true
      path: /h2-console
  # Datasource for development
  datasource:
    url: jdbc:h2:mem:sfedb
    driver-class-name: org.h2.Driver
    username: sa
    password:
  # JPA Configuration
  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: false
    properties:
      hibernate:
        format_sql: true
  # Async Configuration
  task:
    execution:
      pool:
        core-size: 5
        max-size: 10
        queue-capacity: 100
    scheduling:
      pool:
        size: 3

logging:
  level:
    com.gradientgeeks.sfe.backendsdk: DEBUG
    org.springframework.security: INFO

# SFE Backend SDK Configuration
sfe:
  backend:
    sdk:
      google-cloud-project-id: "your-gcp-project-id"
      play-integrity-api-key: "your-play-integrity-api-key"
      enable-telemetry: true
      
      # Default Security Policies (used if no tenant-specific policy is found)
      policies:
        root-detection:
          action: REJECT
          risk-level: HIGH
        debugger-detection:
          action: WARN
          risk-level: MEDIUM
        app-tampering:
          action: REJECT
          risk-level: CRITICAL

      # Multi-Tenant Configuration
      multi-tenant:
        enable-multi-tenant: true
        tenant-header-name: "X-Tenant-ID"
        tenants:
          # Tenant 1: A major national bank (e.g., "sbi-yono")
          sbi-yono:
            tenant-id: "sbi-yono"
            name: "SBI YONO App"
            allowed-origins:
              - "https://yono.sbi"
              - "https://www.yonosbi.com"
            regulatory:
              authority-id: "RBI-SFE-2024"
              jurisdiction-code: "IN"
            policies:
              root-detection:
                action: REJECT
                risk-level: CRITICAL # Stricter policy for this major bank
              debugger-detection:
                action: REJECT
                risk-level: HIGH
              app-tampering:
                action: REJECT
                risk-level: CRITICAL
          
          # Tenant 2: A new fintech payment app (e.g., "fast-pay")
          fast-pay:
            tenant-id: "fast-pay"
            name: "FastPay Payments"
            allowed-origins:
              - "https://fastpay.app"
              - "https://*.fastpay.app"
            regulatory:
              authority-id: "RBI-SFE-2024"
              jurisdiction-code: "IN"
            policies:
              # Uses slightly less strict policies for initial rollout
              root-detection:
                action: REJECT
                risk-level: HIGH
              debugger-detection:
                action: WARN
                risk-level: MEDIUM
              app-tampering:
                action: REJECT
                risk-level: CRITICAL
          
          # Tenant 3: An international banking app (e.g., "global-bank")
          global-bank:
            tenant-id: "global-bank"
            name: "Global Bank International"
            allowed-origins:
              - "https://global-bank.com"
            regulatory:
              authority-id: "ECB-SFE-2024" # Different regulatory body
              jurisdiction-code: "EU"
            policies:
              root-detection:
                action: REJECT
                risk-level: HIGH
              # All other policies will fall back to default 
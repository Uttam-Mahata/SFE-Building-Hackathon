spring.application.name=sfpaybackend

# Server Configuration
server.port=8080
server.servlet.context-path=/

# JWT Configuration
jwt.secret=sfe-payment-app-super-secret-key-change-in-production
jwt.validity-seconds=3600

# Database Configuration (H2 for development)
spring.datasource.url=jdbc:h2:mem:paymentdb
spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

# JPA Configuration
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

# SFE Backend SDK Configuration
sfe.backend.sdk.google-cloud-project-id=payment-app-project
sfe.backend.sdk.play-integrity-api-key=your-play-integrity-api-key
sfe.backend.sdk.enable-telemetry=true
sfe.backend.sdk.regulatory-api-endpoint=https://regulatory-api.example.com/submit

# Security Policies
sfe.backend.sdk.policies.root-detection.action=REJECT
sfe.backend.sdk.policies.root-detection.risk-level=HIGH
sfe.backend.sdk.policies.debugger-detection.action=WARN
sfe.backend.sdk.policies.debugger-detection.risk-level=MEDIUM
sfe.backend.sdk.policies.app-tampering.action=REJECT
sfe.backend.sdk.policies.app-tampering.risk-level=CRITICAL

# Telemetry Configuration
sfe.backend.sdk.telemetry.enable-batching=true
sfe.backend.sdk.telemetry.batch-size=50
sfe.backend.sdk.telemetry.batch-timeout-ms=30000
sfe.backend.sdk.telemetry.enable-anonymization=true
sfe.backend.sdk.telemetry.salt-key=payment-app-telemetry-salt

# Logging Configuration
logging.level.com.gradientgeeks.sfe.sfpaybackend=DEBUG
logging.level.com.gradientgeeks.sfe.backendsdk=DEBUG
logging.level.org.springframework.security=DEBUG
logging.pattern.console=%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n

# Actuator Configuration
management.endpoints.web.exposure.include=health,info,metrics
management.endpoints.web.base-path=/actuator
management.endpoint.health.show-details=when-authorized

# Application Info
info.app.name=SFE Payment App Backend
info.app.description=Secure Financial Environment Payment Processing Backend
info.app.version=1.0.0
info.sfe.integration=enabled

# Async Configuration
spring.task.execution.pool.core-size=5
spring.task.execution.pool.max-size=15
spring.task.scheduling.pool.size=5

# Server Configuration
server.port=8080
server.servlet.context-path=/

# JWT Configuration
jwt.secret=sfe-payment-app-super-secret-key-change-in-production
jwt.validity-seconds=3600

# Database Configuration (H2 for development)
spring.datasource.url=jdbc:h2:mem:paymentdb
spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

# JPA Configuration
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

# SFE Backend SDK Configuration (inherited from auto-configuration)
sfe.backend.sdk.google-cloud-project-id=payment-app-project
sfe.backend.sdk.play-integrity-api-key=your-play-integrity-api-key
sfe.backend.sdk.enable-telemetry=true
sfe.backend.sdk.regulatory-api-endpoint=https://regulatory-api.example.com/submit

# Security Policies
sfe.backend.sdk.policies.root-detection.action=REJECT
sfe.backend.sdk.policies.root-detection.risk-level=HIGH
sfe.backend.sdk.policies.debugger-detection.action=WARN
sfe.backend.sdk.policies.debugger-detection.risk-level=MEDIUM
sfe.backend.sdk.policies.app-tampering.action=REJECT
sfe.backend.sdk.policies.app-tampering.risk-level=CRITICAL

# Telemetry Configuration
sfe.backend.sdk.telemetry.enable-batching=true
sfe.backend.sdk.telemetry.batch-size=50
sfe.backend.sdk.telemetry.batch-timeout-ms=30000
sfe.backend.sdk.telemetry.enable-anonymization=true
sfe.backend.sdk.telemetry.salt-key=payment-app-telemetry-salt

# Payment Gateway Configuration
payment.gateway.mock.success-rate=0.9
payment.gateway.mock.enhanced-success-rate=0.85
payment.gateway.max-amount=10000.00
payment.gateway.supported-currencies=USD,EUR,GBP,CAD
payment.gateway.timeout-ms=5000

# Logging Configuration
logging.level.com.gradientgeeks.sfe.sfpaybackend=DEBUG
logging.level.com.gradientgeeks.sfe.backendsdk=DEBUG
logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.web=INFO
logging.pattern.console=%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n

# Actuator Configuration
management.endpoints.web.exposure.include=health,info,metrics,env
management.endpoints.web.base-path=/actuator
management.endpoint.health.show-details=when-authorized
management.info.env.enabled=true

# Application Info
info.app.name=SFE Payment App Backend
info.app.description=Secure Financial Environment Payment Processing Backend
info.app.version=1.0.0
info.app.encoding=UTF-8
info.app.java.version=${java.version}
info.sfe.integration=enabled
info.sfe.version=1.2.0

# Async Configuration
spring.task.execution.pool.core-size=5
spring.task.execution.pool.max-size=15
spring.task.execution.pool.queue-capacity=200
spring.task.scheduling.pool.size=5

# Web Configuration
spring.mvc.async.request-timeout=30000
spring.jackson.serialization.write-dates-as-timestamps=false
spring.jackson.time-zone=UTC

# Security Configuration
spring.security.require-ssl=false
spring.security.headers.frame=sameorigin

# CORS Configuration (additional to SecurityConfig)
web.cors.allowed-origins=*
web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
web.cors.allowed-headers=*
web.cors.allow-credentials=true
web.cors.max-age=3600
